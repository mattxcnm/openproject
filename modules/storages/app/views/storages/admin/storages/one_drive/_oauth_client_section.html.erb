<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) 2012-2023 the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.
++#%>

<%= render(AttributeGroups::AttributeGroupComponent.new) do |component| %>
  <% component.with_header(title: "#{t("storages.provider_types.#{@storage.short_provider_type}.name")} #{t(:'storages.label_oauth_client_details')}") %>

  <% if @storage.oauth_client %>
    <% component.with_attributes([
                                   { key: "#{t("storages.provider_types.#{@storage.short_provider_type}.name")} #{Storages::Admin::LABEL_OAUTH_CLIENT_ID}",
                                     value: @storage.oauth_client.client_id },
                                   { key: "#{t("storages.provider_types.#{@storage.short_provider_type}.name")} #{Storages::Admin::LABEL_OAUTH_CLIENT_SECRET}",
                                     value: short_secret(@storage.oauth_client.client_secret) },
                                   { key: "#{t("storages.provider_types.#{@storage.short_provider_type}.name")} #{Storages::Admin::LABEL_OAUTH_REDIRECT_URI}",
                                     value: @storage.oauth_client.redirect_uri }
                                 ]) %>

    <%= link_to(t("storages.buttons.replace_provider_type_oauth", provider_type: t("storages.provider_types.#{@storage.short_provider_type}.name")),
                new_admin_settings_storage_oauth_client_path(@storage),
                data: { confirm: t(:'storages.confirm_replace_oauth_client') },
                class: 'button -with-icon icon-reload') %>
  <% else %>
    <%= link_to(t("js.label_create"), new_admin_settings_storage_oauth_client_path(@storage), class: 'button -with-icon icon-add') %>
  <% end %>
<% end %>
